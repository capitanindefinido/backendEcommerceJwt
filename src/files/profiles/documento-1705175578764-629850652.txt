DELIMITER //

/*CREATE PROCEDURE DropForeignKeyIfExist()
BEGIN
    -- Tabla EVALUACION
    IF (SELECT COUNT(*) FROM information_schema.table_constraints WHERE table_name = 'EVALUACION' AND constraint_name = 'FK_EVALUACI_PARADERO__PARADERO') > 0 THEN
        ALTER TABLE EVALUACION DROP FOREIGN KEY FK_EVALUACI_PARADERO__PARADERO;
    END IF;

    -- Tabla PARADERO
    IF (SELECT COUNT(*) FROM information_schema.table_constraints WHERE table_name = 'PARADERO' AND constraint_name = 'FK_PARADERO_PARADERO__COMUNA') > 0 THEN
        ALTER TABLE PARADERO DROP FOREIGN KEY FK_PARADERO_PARADERO__COMUNA;
    END IF;
    
    IF (SELECT COUNT(*) FROM information_schema.table_constraints WHERE table_name = 'PARADERO' AND constraint_name = 'FK_PARADERO_PARADERO__PARADERO') > 0 THEN
        ALTER TABLE PARADERO DROP FOREIGN KEY FK_PARADERO_PARADERO__PARADERO;
    END IF;

    -- Tabla PARADERO_RECORRIDO
    IF (SELECT COUNT(*) FROM information_schema.table_constraints WHERE table_name = 'PARADERO_RECORRIDO' AND constraint_name = 'FK_PARADERO_PARADERO__RECORRID') > 0 THEN
        ALTER TABLE PARADERO_RECORRIDO DROP FOREIGN KEY FK_PARADERO_PARADERO__RECORRID;
    END IF;
END //
*/

DELIMITER ;

-- Llamar al procedimiento para ejecutar la l贸gica de eliminaci贸n
CALL DropForeignKeyIfExist();

DROP TABLE IF EXISTS COMUNA;

DROP TABLE IF EXISTS EVALUACION;
DROP TABLE IF EXISTS PARADERO_RECORRIDO;
DROP TABLE IF EXISTS PARADERO;
DROP TABLE IF EXISTS RECORRIDO;





-- Creaci贸n de tablas
-- Table: COMUNA
CREATE TABLE COMUNA 
(
   COD_COM              CHAR(5)                        NOT NULL,
   NOM_COM              VARCHAR(100)                   NOT NULL,
   CONSTRAINT PK_COMUNA PRIMARY KEY (COD_COM)
);

-- Index: COMUNA_PK
CREATE UNIQUE INDEX COMUNA_PK ON COMUNA (COD_COM);

-- Table: EVALUACION
CREATE TABLE EVALUACION 
(
   COD_EVA              INT                        NOT NULL,
   COD_PAR              CHAR(15)                   NOT NULL,
   TXT_EVA              CHAR(3)                    NOT NULL,
   AUD_EVA              CHAR(3)                    NOT NULL,
   NOM_EVA              CHAR(3)                    NOT NULL,
   TXT_COM_EVA          VARCHAR(100),
   AUD_COM_EVA          VARCHAR(100),
   NOM_COM_EVA          VARCHAR(100),
   FECHA_EVA            TIMESTAMP                  NOT NULL,
   CONSTRAINT PK_EVALUACION PRIMARY KEY (COD_EVA)
);

-- Index: EVALUACION_PK
CREATE UNIQUE INDEX EVALUACION_PK ON EVALUACION (COD_EVA);

-- Index: PARADERO_EVALUACION_FK
CREATE INDEX PARADERO_EVALUACION_FK ON EVALUACION (COD_PAR);

-- Table: PARADERO
CREATE TABLE PARADERO 
(
   COD_PAR              CHAR(15)                   NOT NULL,
   COD_COM              CHAR(5)                    NOT NULL,
   COD_USU_PAR          CHAR(6)                    NOT NULL,
   NOM_PAR              VARCHAR(50)                NOT NULL,
   TXT_INFO_PAR         VARCHAR(100)               NOT NULL,
   AUD_INFO_PAR         VARCHAR(100)               NOT NULL,
   NOM_SEN_PAR          VARCHAR(100)               NOT NULL,
   SENT_PAR             VARCHAR(10)                NOT NULL,
   CONSTRAINT PK_PARADERO PRIMARY KEY (COD_PAR)
);

-- Index: PARADERO_PK
CREATE UNIQUE INDEX PARADERO_PK ON PARADERO (COD_PAR);

-- Index: PARADERO_COMUNA_FK
CREATE INDEX PARADERO_COMUNA_FK ON PARADERO (COD_COM);

-- Table: PARADERO_RECORRIDO
CREATE TABLE PARADERO_RECORRIDO 
(
   COD_PAR              CHAR(15)                   NOT NULL,
   COD_REC              CHAR(5)                    NOT NULL,
   CONSTRAINT PK_PARADERO_RECORRIDO PRIMARY KEY (COD_PAR, COD_REC)
);

-- Index: PARADERO_RECORRIDO_PK
CREATE UNIQUE INDEX PARADERO_RECORRIDO_PK ON PARADERO_RECORRIDO (COD_PAR, COD_REC);

-- Index: PARADERO_RECORRIDO_FK
CREATE INDEX PARADERO_RECORRIDO_FK ON PARADERO_RECORRIDO (COD_PAR);

-- Index: PARADERO_RECORRIDO2_FK
CREATE INDEX PARADERO_RECORRIDO2_FK ON PARADERO_RECORRIDO (COD_REC);

-- Table: RECORRIDO
CREATE TABLE RECORRIDO 
(
   COD_REC              CHAR(5)                    NOT NULL,
   COD_USU_REC          CHAR(5)                    NOT NULL,
   NOM_REC              VARCHAR(20),
   DEST_REC             VARCHAR(30)                NOT NULL,
   HOR_REC              VARCHAR(100)               NOT NULL,
   CONSTRAINT PK_RECORRIDO PRIMARY KEY (COD_REC)
);

-- Index: RECORRIDO_PK
CREATE UNIQUE INDEX RECORRIDO_PK ON RECORRIDO (COD_REC);

-- Creaci贸n de restricciones de clave externa
ALTER TABLE EVALUACION
   ADD CONSTRAINT FK_EVALUACI_PARADERO__PARADERO FOREIGN KEY (COD_PAR)
   REFERENCES PARADERO (COD_PAR)
   ON UPDATE RESTRICT
   ON DELETE RESTRICT;

ALTER TABLE PARADERO
   ADD CONSTRAINT FK_PARADERO_PARADERO__COMUNA FOREIGN KEY (COD_COM)
   REFERENCES COMUNA (COD_COM)
   ON UPDATE RESTRICT
   ON DELETE RESTRICT;

ALTER TABLE PARADERO_RECORRIDO
   ADD CONSTRAINT FK_PARADERO_PARADERO__PARADERO FOREIGN KEY (COD_PAR)
   REFERENCES PARADERO (COD_PAR)
   ON UPDATE RESTRICT
   ON DELETE RESTRICT;

ALTER TABLE PARADERO_RECORRIDO
   ADD CONSTRAINT FK_PARADERO_PARADERO__RECORRID FOREIGN KEY (COD_REC)
   REFERENCES RECORRIDO (COD_REC)
   ON UPDATE RESTRICT
   ON DELETE RESTRICT;